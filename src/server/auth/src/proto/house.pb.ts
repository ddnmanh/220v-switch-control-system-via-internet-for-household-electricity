// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.29.2
// source: house.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { wrappers } from "protobufjs";
import { Observable } from "rxjs";
import { Struct } from "./google/protobuf/struct.pb";

export const protobufPackage = "house";

/** -------------------------- COMMON */
export interface FieldError {
  property: string;
  message: string;
}

export interface CommonRes {
  code: number;
  status: string;
  message: FieldError[];
  data: { [key: string]: any } | undefined;
}

/**
 * --------------------------- HOUSE
 * Create house
 */
export interface CreateHouseReq {
  idUser: string;
  name: string;
  desc: string;
  isWallpaperBlur: boolean;
}

/** Get House info */
export interface GetHouseReq {
  houseId: string;
  idUser: string;
}

/** Update House */
export interface UpdateHouseReq {
  houseId: string;
  idUser: string;
  name: string;
  desc: string;
  isWallpaperBlur: boolean;
  isMainHouse: boolean;
}

/** Delete House */
export interface DeleteHouseReq {
  houseId: string;
  idUser: string;
}

/**
 * --------------------------- AREA
 * Create
 */
export interface CreateAreaReq {
  idHouse: string;
  idUser: string;
  name: string;
  desc: string;
}

/** Get */
export interface GetAreaReq {
  areaId: string;
  idUser: string;
}

/** Update */
export interface UpdateAreaReq {
  areaId: string;
  idUser: string;
  name: string;
  desc: string;
}

/** Delete */
export interface DeleteAreaReq {
  areaId: string;
  idUser: string;
}

/**
 * --------------------------- OWN DEVICE ---------------------------
 * Create
 */
export interface CreateOwnDeviceReq {
  idDevice: string;
  idHouse: string;
  idArea: string;
  idUser: string;
  name: string;
  desc: string;
}

/** Get */
export interface GetOwnDeviceReq {
  idDevice: string;
  idUser: string;
}

/** Update */
export interface UpdateOwnDeviceReq {
  idDevice: string;
  idUser: string;
  name: string;
  desc: string;
}

/** Delete */
export interface DeleteOwnDeviceReq {
  idDevice: string;
  idUser: string;
}

export const HOUSE_PACKAGE_NAME = "house";

wrappers[".google.protobuf.Struct"] = { fromObject: Struct.wrap, toObject: Struct.unwrap } as any;

export interface HouseServiceClient {
  createHouse(request: CreateHouseReq): Observable<CommonRes>;

  getHouseInfo(request: GetHouseReq): Observable<CommonRes>;

  updateHouse(request: UpdateHouseReq): Observable<CommonRes>;

  deleteHouse(request: DeleteHouseReq): Observable<CommonRes>;

  createArea(request: CreateAreaReq): Observable<CommonRes>;

  getAreaInfo(request: GetAreaReq): Observable<CommonRes>;

  updateArea(request: UpdateAreaReq): Observable<CommonRes>;

  deleteArea(request: DeleteAreaReq): Observable<CommonRes>;

  createOwnDevice(request: CreateOwnDeviceReq): Observable<CommonRes>;

  getOwnDeviceInfo(request: GetOwnDeviceReq): Observable<CommonRes>;

  updateOwnDevice(request: UpdateOwnDeviceReq): Observable<CommonRes>;

  deleteOwnDevice(request: DeleteOwnDeviceReq): Observable<CommonRes>;
}

export interface HouseServiceController {
  createHouse(request: CreateHouseReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  getHouseInfo(request: GetHouseReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  updateHouse(request: UpdateHouseReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  deleteHouse(request: DeleteHouseReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  createArea(request: CreateAreaReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  getAreaInfo(request: GetAreaReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  updateArea(request: UpdateAreaReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  deleteArea(request: DeleteAreaReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  createOwnDevice(request: CreateOwnDeviceReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  getOwnDeviceInfo(request: GetOwnDeviceReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  updateOwnDevice(request: UpdateOwnDeviceReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;

  deleteOwnDevice(request: DeleteOwnDeviceReq): Promise<CommonRes> | Observable<CommonRes> | CommonRes;
}

export function HouseServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      "createHouse",
      "getHouseInfo",
      "updateHouse",
      "deleteHouse",
      "createArea",
      "getAreaInfo",
      "updateArea",
      "deleteArea",
      "createOwnDevice",
      "getOwnDeviceInfo",
      "updateOwnDevice",
      "deleteOwnDevice",
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("HouseService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("HouseService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const HOUSE_SERVICE_NAME = "HouseService";
